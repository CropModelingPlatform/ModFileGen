
include:
  - remote: 'https://gitlab.com/deploy2zenodo/deploy2zenodo/-/releases/permalink/latest/downloads/deploy2zenodo.yaml'

prepare_release_and_deploy2zenodo:
  stage: build
  image:
    name: alpine:latest
  variables:
    DEPLOY2ZENODO_JSON: "mymetadata.json"
  script:
    # prepare
    - date
    - cat /etc/os-release
    - echo https://dl-cdn.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
    - apk add --no-cache cffconvert git jq curl
    - apk add --no-cache git jq pipx py3-attrs py3-certifi py3-charset-normalizer py3-click py3-dateutil py3-idna py3-pykwalify py3-pyrsistent py3-requests py3-ruamel py3-urllib3
    - TAG=$(git describe --tags --abbrev=0 || echo "v1.0.0")
    - |
      cffconvert -i CITATION.cff -f zenodo | jq '{"metadata": .}' | jq '.metadata += {"upload_type": "software"}' | jq ".metadata.version = \"$TAG\"" | tee "$DEPLOY2ZENODO_JSON"
    - dd if=/dev/urandom of=a bs=64 count=127
    - |
      echo "DESCRIPTION=for bar baz" > variables.env

      TAG=$(git describe --tags --abbrev=0 2>/dev/null) || TAG="v1.0.0"
      echo "TAG=$TAG" >> variables.env

      DEPLOY2ZENODO_JSON="mymetadata.json"
      echo "DEPLOY2ZENODO_JSON=$DEPLOY2ZENODO_JSON" >> variables.env

      DEPLOY2ZENODO_UPLOAD="modfilegensim.zip"
      git archive --format zip --output "$DEPLOY2ZENODO_UPLOAD" HEAD
      echo "DEPLOY2ZENODO_UPLOAD=$DEPLOY2ZENODO_UPLOAD" >> variables.env

  artifacts:
    reports:
      dotenv: variables.env
    paths:
      - $DEPLOY2ZENODO_JSON
      - modfilegensim.zip

release_job:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image:
    registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - cat /etc/os-release
    - apk add --no-cache curl
    - |
      if curl --silent --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases/$TAG" | grep -q "tag_name"; then
        echo 'Release for tag v$TAG already exists, skipping...'
      else
        release-cli create \
          --name "v$TAG" \
          --description "$(cat README.rst)" \
          --tag-name "$TAG" \
          --ref "$CI_COMMIT_SHA"
      fi

deploy2zenodo:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    DEPLOY2ZENODO_API_URL: "https://zenodo.org/api"
    DEPLOY2ZENODO_DEPOSITION_ID: "New record"
